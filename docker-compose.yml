services:
  app:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: migrant-test-app
    container_name: migrant-test-app
    volumes:
      - ./apps:/code/apps
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
    depends_on:
      - postgres
      - clickhouse-server
    networks:
      - default


  postgres:
    image: postgres:16-alpine
    hostname: postgres
    container_name: migrant-test-db
    environment:
      POSTGRES_USER: pguser
      POSTGRES_PASSWORD: 123123
      POSTGRES_DB: migrant_db
    ports:
      - "5435:5432"
    volumes:
      - ./data:/data
      - migrant_pg_data:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
    networks:
      - default

  redis:
    image: redis:7.4.1-alpine
    restart: unless-stopped
    ports:
      - '${REDIS_PORT:-6379}:6379'
    volumes:
      - core-redis:/data
    networks:
        - default
    command: 'redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}'
    healthcheck:
      test: [ 'CMD', 'redis-cli', 'ping' ]
      retries: 3
      timeout: 5s
    env_file:
      - ./.env

#  celery:
#    build:
#      context: .
#      dockerfile: ./Dockerfile
#    image: migrant-test-app
#    container_name: migrant-test-celery
#    command: celery -A core worker --loglevel=info
#    environment:
#      - DJANGO_SETTINGS_MODULE=core.config
#      - DJANGO_CONFIGURATION=Local
#    env_file:
#      - .env
#    volumes:
#      - ./apps:/code/apps
#    depends_on:
#      - redis
#      - postgres
#    networks:
#      - default

  clickhouse-server:
    image: clickhouse/clickhouse-server:latest
    hostname: clickhouse-server
    container_name: migrant-clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - migrant_clickhouse_data:/var/lib/clickhouse
      - ./data/clickhouse-users/users.xml:/etc/clickhouse-server/users.xml
    environment:
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=admin
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
    restart: unless-stopped
    networks:
      - default
    depends_on:
      - postgres

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper
    container_name: migrant-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log
    healthcheck:
      test: [ "CMD-SHELL", "echo stat | nc localhost 2181" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - default

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    hostname: kafka
    container_name: migrant-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - default

  connect:
    image: debezium/connect:2.5
    hostname: connect
    container_name: migrant-connect
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: debezium_connect_configs
      OFFSET_STORAGE_TOPIC: debezium_connect_offsets
      STATUS_STORAGE_TOPIC: debezium_connect_statuses
      KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      PLUGIN_PATH: /kafka/connect
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
    networks:
      - default
    volumes:
      - ./data/debezium_postgres_migrant_connector.json:/debezium_postgres_migrant_connector.json
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_started

volumes:
  migrant_clickhouse_data:
  migrant_pg_data:
  core-redis:
    driver: local
  zookeeper_data:
  zookeeper_log:
  kafka_data:

networks:
  default:
    driver: bridge